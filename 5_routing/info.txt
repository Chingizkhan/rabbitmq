In the previous tutorial we built a simple logging system. We were able to broadcast log messages to many receivers.

In this tutorial we're going to add a feature to it - we're going to make it possible to subscribe only to a subset of the messages.
For example, we will be able to direct only critical error messages to the log file (to save disk space),
while still being able to print all of the log messages on the console.

//

Direct exchange

Our logging system from the previous tutorial broadcasts all messages to all consumers.
We want to extend that to allow filtering messages based on their severity.
For example we may want the script which is writing log messages to the disk to only receive critical errors,
and not waste disk space on warning or info log messages.

We were using a fanout exchange, which doesn't give us much flexibility - it's only capable of mindless broadcasting.

We will use a direct exchange instead. The routing algorithm behind a direct exchange is simple - a message goes
to the queues whose binding key exactly matches the routing key of the message.

//

Multiple bindings

It is perfectly legal to bind multiple queues with the same binding key.
In that case, the direct exchange will behave like fanout and will broadcast the message to all the matching queues.

//

Emitting logs